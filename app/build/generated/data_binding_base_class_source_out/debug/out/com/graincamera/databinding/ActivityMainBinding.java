// Generated by view binder compiler. Do not edit!
package com.graincamera.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.SeekBar;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.graincamera.R;
import com.graincamera.gl.CameraGLSurfaceView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final SeekBar bloomSeek;

  @NonNull
  public final Button captureBtn;

  @NonNull
  public final Spinner filmSpinner;

  @NonNull
  public final CameraGLSurfaceView glView;

  @NonNull
  public final SeekBar grainSeek;

  @NonNull
  public final SeekBar halationSeek;

  @NonNull
  public final Button switchBtn;

  private ActivityMainBinding(@NonNull FrameLayout rootView, @NonNull SeekBar bloomSeek,
      @NonNull Button captureBtn, @NonNull Spinner filmSpinner, @NonNull CameraGLSurfaceView glView,
      @NonNull SeekBar grainSeek, @NonNull SeekBar halationSeek, @NonNull Button switchBtn) {
    this.rootView = rootView;
    this.bloomSeek = bloomSeek;
    this.captureBtn = captureBtn;
    this.filmSpinner = filmSpinner;
    this.glView = glView;
    this.grainSeek = grainSeek;
    this.halationSeek = halationSeek;
    this.switchBtn = switchBtn;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bloomSeek;
      SeekBar bloomSeek = ViewBindings.findChildViewById(rootView, id);
      if (bloomSeek == null) {
        break missingId;
      }

      id = R.id.captureBtn;
      Button captureBtn = ViewBindings.findChildViewById(rootView, id);
      if (captureBtn == null) {
        break missingId;
      }

      id = R.id.filmSpinner;
      Spinner filmSpinner = ViewBindings.findChildViewById(rootView, id);
      if (filmSpinner == null) {
        break missingId;
      }

      id = R.id.glView;
      CameraGLSurfaceView glView = ViewBindings.findChildViewById(rootView, id);
      if (glView == null) {
        break missingId;
      }

      id = R.id.grainSeek;
      SeekBar grainSeek = ViewBindings.findChildViewById(rootView, id);
      if (grainSeek == null) {
        break missingId;
      }

      id = R.id.halationSeek;
      SeekBar halationSeek = ViewBindings.findChildViewById(rootView, id);
      if (halationSeek == null) {
        break missingId;
      }

      id = R.id.switchBtn;
      Button switchBtn = ViewBindings.findChildViewById(rootView, id);
      if (switchBtn == null) {
        break missingId;
      }

      return new ActivityMainBinding((FrameLayout) rootView, bloomSeek, captureBtn, filmSpinner,
          glView, grainSeek, halationSeek, switchBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
